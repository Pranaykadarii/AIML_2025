{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyPgLorqxrVgXEfamFGxxY18",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Pranaykadarii/AIML_2025/blob/main/Lab-04\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "iMv2qYfBW_dB"
      },
      "outputs": [],
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "from scipy import stats"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Create pyanthetic dataset\n",
        "np.random.seed(42)\n",
        "data=np.random.normal(0,1,100) #Normal distribution\n",
        "outliers=np.random.uniform(5,10,5) #Artificial outliers\n",
        "data_with_outliers=np.concatenate([data,outliers])\n"
      ],
      "metadata": {
        "id": "rzB2I66aeHRG"
      },
      "execution_count": 5,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Convert to dataframe\n",
        "df=pd.DataFrame(data_with_outliers,columns=['Value'])"
      ],
      "metadata": {
        "id": "DWG5ylo6fW0F"
      },
      "execution_count": 6,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Step 1:Detect  outliers using IQR method\n",
        "Q1=df['Value'].quantile(0.25)\n",
        "Q3=df['Value'].quantile(0.75)\n",
        "IQR=Q3-Q1\n",
        "lower_bound=Q1-1.5*IQR\n",
        "upper_bound=Q3+1.5*IQR"
      ],
      "metadata": {
        "id": "KA48v0xVgAg-"
      },
      "execution_count": 7,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "lower_bound"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "vG4ORungh8Sv",
        "outputId": "3ec7fdc4-06f5-439c-ea43-7ed141ee985e"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "-2.3232332563637335"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "upper_bound"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Qasxds_oiA03",
        "outputId": "07e7a408-2265-4b71-ea57-f583c04f03fe"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "2.372622015963629"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Identifying outliers based on IQR\n",
        "outliers_iqr=df[(df['Value']<lower_bound) | (df['Value']>upper_bound)]"
      ],
      "metadata": {
        "id": "AS_kM8vugUOm"
      },
      "execution_count": 8,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Step 2: Detect outliers using z score method\n",
        "z_scores=stats.zscore(df['Value'])\n",
        "outliers_zscore=df[np.abs(z_scores)>3]"
      ],
      "metadata": {
        "id": "xjpHSyO7gkR-"
      },
      "execution_count": 9,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Step 3: visualize outliers using a boxplot\n",
        "plt.figure(figsize=(8,6))\n",
        "sns.boxplot(x=df['Value'])\n",
        "plt.title('Boxplot of Data with Outliers Defection')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 564
        },
        "id": "BacOvneTg37m",
        "outputId": "96ddf88a-187a-41fd-aa48-ce16e0e80419"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Step 4:Handle outliers\n",
        "#Capping: Set outliers to the upper and lower bounds\n",
        "df_capped=df.copy()\n",
        "df_capped['Value']=np.clip(df_capped['Value'],lower_bound,upper_bound)"
      ],
      "metadata": {
        "id": "S9Za5s3TiNKm"
      },
      "execution_count": 28,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Removal:Drop rows with outliers\n",
        "df_removed=df.copy()\n",
        "df_removed=df_removed[(df_removed['Value'] >= lower_bound) & (df_removed['Value'] <= upper_bound)]"
      ],
      "metadata": {
        "id": "96Jqmn9jioS-"
      },
      "execution_count": 20,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Imputation:Replace outliers with the median\n",
        "df_imputed=df.copy()\n",
        "median_value=df_imputed['Value'].median()\n",
        "df_imputed['Value'] = np.where((df_imputed['Value'] < lower_bound) | (df_imputed['Value'] > upper_bound),median_value,df_imputed['Value'])"
      ],
      "metadata": {
        "id": "WJAKFiP1kM9O"
      },
      "execution_count": 23,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Step:5 Visualize handled data\n",
        "#Capped data\n",
        "plt.figure(figsize=(8,6))\n",
        "sns.boxplot(x=df_capped['Value'])\n",
        "plt.title('Capped Outliers')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 564
        },
        "id": "at897-VZmQyg",
        "outputId": "ac5c17a0-d35d-4b0c-fa9b-a172882cc9a3"
      },
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Removed data\n",
        "plt.figure(figsize=(8,6))\n",
        "sns.boxplot(x=df_removed['Value'])\n",
        "plt.title('Removed Outliers')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 564
        },
        "id": "HG9QSdqrm5In",
        "outputId": "95754da8-8d57-4d25-ec12-0bfa9b9775d1"
      },
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Imputed data\n",
        "plt.figure(figsize=(8,6))\n",
        "sns.boxplot(x=df_imputed['Value'])\n",
        "plt.title('Imputed Outliers')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 564
        },
        "id": "kTxqpnZbnjp4",
        "outputId": "bbbb58ed-6089-426c-ceca-bcf676d9595a"
      },
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 1 Axes>"
            ],
            "image/png": "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Wq+mpiYi3nhfYvfu3bP79/b+wfra9f7ApUuXxujRo/e4ztKlSyMi6nRlsq7HVxe75mDq1KlRVVW1x3WOOeaYWrfbtWuXrTN27Nh417veFXfddVf86le/iptuuilmzJgRd955Z7znPe9psPECBw+RCDSKp59+Os4444zC7a1bt8batWvj3HPPLSx7y1veEhs3bqy13c6dO2Pt2rW1lu1+9XKXfv36RURE165d4+yzz97rWHr37l0Y0+5Wrly57wOJiNNPPz0qKyvjBz/4QVx33XV7jOXbbrstIiLOP//8wrK/9fjqYteVvtatW+9zDuqiR48eMXny5Jg8eXK89NJLMXjw4PjSl74kEuEw5T2JQKP4zne+E6+//nrh9i233BJ//etfawVHv379YuHChdl2u19p2/U9frsHV1VVVZSXl8eXv/zlWo+1y//93/9FxBvxM2jQoPje974XmzZtKtw/b968WL58+X6PpX379jF16tRYuXJlXHfdddn999xzT8yZMyeqqqrine98Z4MdX1107do1Ro4cGd/+9rez+Iz4f3OwL9XV1bXmZdd+e/bsGTt27Kj3mIBDgyuJQKPYuXNnnHXWWTF27NhYuXJl3HzzzXH66afH+973vsI6H/3oR+PKK6+MMWPGxDnnnBN/+MMf4t57743OnTvX2tegQYOiZcuWMWPGjNi0aVOUlpbGmWeeGV27do1bbrklLrvsshg8eHBcfPHF0aVLl1izZk3cc889cdppp8U3v/nNiIi48cYb47zzzovTTz89PvKRj8SGDRviG9/4RgwYMCC2bt263+O59tprY8mSJTFjxoxYtGhRjBkzJtq1axcPPfRQfP/7348TTjghvve979XapiGOry5mzZoVp59+egwcODAuv/zy6Nu3b6xfvz4WLVoUzz//fPzhD3/Y5/ZbtmyJI488Mt7//vfHySefHGVlZfHrX/86HnnkkfjqV79apzEAh6Bif7waKJ69fQVOhw4dsnVHjBiRBgwYkC3v3bt3Ou+887J9LliwIE2aNCm95S1vSWVlZenSSy9NL7/8cq1tq6ur06c//enUuXPn1L59+1RVVZVWrVqVfUVMSin9x3/8R+rbt29q2bJl9nUxDzzwQKqqqkoVFRWpbdu2qV+/fmnChAnp0UcfrbWP//7v/04nnHBCKi0tTW9729vSnXfemcaPH7/fr8B5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119/Pd797nfHq6++utdtGuw5KR0EZs6cmfr06bPX+zdu3Jhat26d5s6dW1i2YsWKFBFp0aJFTTHEopk9e3aqqKio07rjx49PF1xwQaOOp7mq6zzV1NSk7t27p5tuuqmwbOPGjam0tDT98Ic/bMQRFsfy5ctTRKRHHnmksOwXv/hFKikpSS+88MJetxsxYkT6xCc+0QQjLI53vOMdacqUKYXb1dXVqWfPnunGG2/c4/pjx45N5513Xq1lp556arriiisadZzFVN85qs9z1aEoItJdd921z3X+6Z/+KQ0YMKDWsg984AOpqqqqEUfWvNRlnh544IEUEemVV15pkjE1Ny+99FKKiLRgwYK9rtNQz0nN7krinmzatCk6deq01/sfe+yxeP311+Pss88uLDv++OPjqKOOikWLFjXFEA8a8+fPj65du0b//v3jqquuipdffrnYQ2pWVq9eHevWrat1LlVUVMSpp556SJ5LixYtisrKyjjllFMKy84+++xo0aJFLF68eJ/b3nHHHdG5c+c48cQT4zOf+Uy89tprjT3cJrFz58547LHHap0DLVq0iLPPPnuv58CiRYtqrR8RUVVVdUieMxEHNkcREVu3bo3evXtHr1694oILLohly5Y1xXAPGofbefS3GjRoUPTo0SPOOeecePjhh4s9nCazadOmiIh9dlFDnUut6j+8prVq1ar4xje+EV/5ylf2us66deuiTZs22XvOunXrdsi+R+FAjBo1Ki688MLo06dPPPPMM/HZz3423vOe98SiRYuiZcuWxR5es7DrfOnWrVut5YfqubRu3brsJZpWrVpFp06d9nm8H/zgB6N3797Rs2fPWLp0aXz605+OlStXxp133tnYQ250f/nLX6K6unqP58BTTz21x23WrVt32JwzEQc2R/37949bb701TjrppNi0aVN85StfiWHDhsWyZcviyCOPbIphN3t7O482b94c27Zti3bt2hVpZM1Ljx494lvf+laccsopsWPHjvjud78bI0eOjMWLF8fgwYOLPbxGVVNTE9dcc02cdtppceKJJ+51vYZ6TmqyK4nXXnvtHt9o+uaf3Z9cXnjhhRg1alRcdNFFcfnllzfVUIvmQOaoPi6++OJ43/veFwMHDozRo0fHz372s3jkkUdi/vz5DXcQTaCx5+lQ0NhzNGnSpKiqqoqBAwfGpZdeGrfddlvcdddd8cwzzzTgUXAoGTp0aIwbNy4GDRoUI0aMiDvvvDO6dOkS3/72t4s9NA4y/fv3jyuuuCKGDBkSw4YNi1tvvTWGDRsWX/va14o9tEY3ZcqUePLJJ+NHP/pRkzxek11J/Md//MeYMGHCPtfp27dv4f9ffPHFOOOMM2LYsGHxne98Z5/bde/ePXbu3BkbN26sdTVx/fr10b17979l2E2qvnP0t+rbt2907tw5Vq1aFWeddVaD7bexNeY87Tpf1q9fHz169CgsX79+fQwaNOiA9lkMdZ2j7t27Zx80+Otf/xobNmyo19+dU089NSLeuPLfr1+/eo+3OencuXO0bNky+3aEfT2fdO/evV7rH+wOZI5217p163j7298eq1ataowhHpT2dh6Vl5e7irgf73jHO+Khhx4q9jAa1dVXX134cOH+rr431HNSk0Vily5dokuXLnVa94UXXogzzjgjhgwZErNnz44WLfZ9wXPIkCHRunXruO+++2LMmDER8canntasWRNDhw79m8feVOozRw3h+eefj5dffrlWDB0MGnOe+vTpE927d4/77ruvEIWbN2+OxYsX1/uT5MVU1zkaOnRobNy4MR577LEYMmRIRETcf//9UVNTUwi/unj88ccjIg66c2lP2rRpE0OGDIn77rsvRo8eHRFvvMRz3333xdVXX73HbYYOHRr33XdfXHPNNYVl8+bNO6ief+rjQOZod9XV1fHEE0/Eueee24gjPbgMHTo0+5qSQ/k8akiPP/74IfH8sycppfjYxz4Wd911V8yfPz/69Omz320a7DnpQD5Z05ief/75dMwxx6SzzjorPf/882nt2rWFnzev079//7R48eLCsiuvvDIdddRR6f7770+PPvpoGjp0aBo6dGgxDqFJPPfcc2nJkiVp+vTpqaysLC1ZsiQtWbIkbdmypbBO//7905133plSSmnLli1p6tSpadGiRWn16tXp17/+dRo8eHA69thj0/bt24t1GI2uvvOUUkr/8i//kiorK9NPf/rTtHTp0nTBBRekPn36pG3bthXjEBrdqFGj0tvf/va0ePHi9NBDD6Vjjz02XXLJJYX7d//7tmrVqvSFL3whPfroo2n16tXppz/9aerbt28aPnx4sQ6hwf3oRz9KpaWlac6cOWn58uVp0qRJqbKyMq1bty6llNJll12Wrr322sL6Dz/8cGrVqlX6yle+klasWJGmTZuWWrdunZ544oliHUKjq+8cTZ8+Pd17773pmWeeSY899li6+OKLU9u2bdOyZcuKdQiNbsuWLYXnnIhI//qv/5qWLFmSnnvuuZRSStdee2267LLLCuv/6U9/Su3bt0+f+tSn0ooVK9KsWbNSy5Yt0y9/+ctiHUKTqO88fe1rX0t33313evrpp9MTTzyRPvGJT6QWLVqkX//618U6hEZ11VVXpYqKijR//vxaTfTaa68V1mms56RmF4mzZ89OEbHHn11Wr16dIiI98MADhWXbtm1LkydPTm95y1tS+/bt09///d/XCstDzfjx4/c4R2+ek4hIs2fPTiml9Nprr6V3v/vdqUuXLql169apd+/e6fLLLy88oR+q6jtPKb3xNTjXX3996tatWyotLU1nnXVWWrlyZdMPvom8/PLL6ZJLLkllZWWpvLw8ffjDH64V0bv/fVuzZk0aPnx46tSpUyotLU3HHHNM+tSnPpU2bdpUpCNoHN/4xjfSUUcdldq0aZPe8Y53pN/+9reF+0aMGJHGjx9fa/2f/OQn6bjjjktt2rRJAwYMSPfcc08Tj7jp1WeOrrnmmsK63bp1S+eee276/e9/X4RRN51dX9Wy+8+ueRk/fnwaMWJEts2gQYNSmzZtUt++fWs9Nx2q6jtPM2bMSP369Utt27ZNnTp1SiNHjkz3339/cQbfBPbWRG8+NxrrOank/x8AAAAUHBTfkwgAQNMSiQAAZEQiAAAZkQgAQEYkAgCQEYkAAGREIgAAGZEIAEBGJAJExMiRI2v9O6cAhzuRCBz03vve98aoUaP2eN+DDz4YJSUlsXTp0iYeFcDBTSQCB72JEyfGvHnz4vnnn8/umz17dpxyyilx0kknFWFkAAcvkQgc9M4///zo0qVLzJkzp9byrVu3xty5c2P06NFxySWXxBFHHBHt27ePgQMHxg9/+MN97rOkpCTuvvvuWssqKytrPcaf//znGDt2bFRWVkanTp3iggsuiGeffbZhDgqgyEQicNBr1apVjBs3LubMmRMppcLyuXPnRnV1dXzoQx+KIUOGxD333BNPPvlkTJo0KS677LL43e9+d8CP+frrr0dVVVV07NgxHnzwwXj44YejrKwsRo0aFTt37myIwwIoKpEIHBI+8pGPxDPPPBMLFiwoLJs9e3aMGTMmevfuHVOnTo1BgwZF375942Mf+1iMGjUqfvKTnxzw4/34xz+Ompqa+O53vxsDBw6ME044IWbPnh1r1qyJ+fPnN8ARARSXSAQOCccff3wMGzYsbr311oiIWLVqVTz44IMxceLEqK6ujn/+53+OgQMHRqdOnaKsrCzuvffeWLNmzQE/3h/+8IdYtWpVdOzYMcrKyqKsrCw6deoU27dvj2eeeaahDgugaFoVewAADWXixInxsY99LGbNmhWzZ8+Ofv36xYgRI2LGjBnxb//2b/H1r389Bg4cGB06dIhrrrlmny8Ll5SU1HrpOuKNl5h32bp1awwZMiTuuOOObNsuXbo03EEBFIlIBA4ZY8eOjU984hPxgx/8IG677ba46qqroqSkJB5++OG44IIL4kMf+lBERNTU1MQf//jHeNvb3rbXfXXp0iXWrl1buP3000/Ha6+9Vrg9ePDg+PGPfxxdu3aN8vLyxjsogCLxcjNwyCgrK4sPfOAD8ZnPfCbWrl0bEyZMiIiIY489NubNmxe/+c1vYsWKFXHFFVfE+vXr97mvM888M775zW/GkiVL4tFHH40rr7wyWrduXbj/0ksvjc6dO8cFF1wQDz74YKxevTrmz58fH//4x/f4VTwABxuRCBxSJk6cGK+88kpUVVVFz549IyLic5/7XAwePDiqqqpi5MiR0b179xg9evQ+9/PVr341evXqFe9617vigx/8YEydOjXat29fuL99+/axcOHCOOqoo+LCCy+ME044ISZOnBjbt293ZRE4JJSk3d90AwDAYc+VRAAAMiIRAICMSAQAICMSAQDIiEQAADIiEQCAjEgEACAjEgEAyIhEAAAyIhEAgIxIBAAg8/8BFnNKrAzLI2AAAAAASUVORK5CYII=\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Print outliers detected\n",
        "print(f\"Outliers detected using IQR:\\n{outliers_iqr}\")\n",
        "print(f\"outliers detected using Z-Score:\\n{outliers_zscore}\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Sa9ZZLRwnqwH",
        "outputId": "b700348c-13a0-45ff-e6de-8990923b4026"
      },
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Outliers detected using IQR:\n",
            "        Value\n",
            "74  -2.619745\n",
            "100  7.087055\n",
            "101  6.110539\n",
            "102  5.599327\n",
            "103  6.688076\n",
            "104  9.714549\n",
            "outliers detected using Z-Score:\n",
            "        Value\n",
            "100  7.087055\n",
            "101  6.110539\n",
            "102  5.599327\n",
            "103  6.688076\n",
            "104  9.714549\n"
          ]
        }
      ]
    }
  ]
}